{"ast":null,"code":"var _jsxFileName = \"/Users/rionsawabe/HikingSNS/client/src/components/events/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport EventItem from \"./EventItem\";\nimport { getEvents } from \"../../actions/event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = _ref => {\n  _s();\n\n  let {\n    getEvents,\n    event: {\n      events\n    }\n  } = _ref;\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"List of Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"You can find the fun hiking event here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: event\n      }, event._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Events, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Events;\nEvents.propTypes = {\n  getEvents: PropTypes.func.isRequired,\n  event: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  event: state.event\n});\n\nexport default connect(mapStateToProps, {\n  getEvents\n})(Events);\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/rionsawabe/HikingSNS/client/src/components/events/Events.js"],"names":["React","useEffect","PropTypes","connect","EventItem","getEvents","Events","event","events","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;;AAEA,MAAMC,MAAM,GAAG,QAAsC;AAAA;;AAAA,MAArC;AAAED,IAAAA,SAAF;AAAaE,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAApB,GAAqC;AACpDP,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,SAAS;AACT,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAGA,sBACC;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACEG,MAAM,CAACC,GAAP,CAAYF,KAAD,iBACX,QAAC,SAAD;AAA2B,QAAA,KAAK,EAAEA;AAAlC,SAAgBA,KAAK,CAACG,GAAtB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAfD;;GAAMJ,M;;KAAAA,M;AAiBNA,MAAM,CAACK,SAAP,GAAmB;AAClBN,EAAAA,SAAS,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADR;AAElBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBD;AAFN,CAAnB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCT,EAAAA,KAAK,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACY,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,MAAxC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport EventItem from \"./EventItem\";\nimport { getEvents } from \"../../actions/event\";\n\nconst Events = ({ getEvents, event: { events } }) => {\n\tuseEffect(() => {\n\t\tgetEvents();\n\t}, [getEvents]);\n\treturn (\n\t\t<section className=\"container\">\n\t\t\t<h1 className=\"large text-primary\">List of Events</h1>\n\t\t\t<p className=\"lead\">You can find the fun hiking event here!</p>\n\t\t\t<div className=\"events\">\n\t\t\t\t{events.map((event) => (\n\t\t\t\t\t<EventItem key={event._id} event={event} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nEvents.propTypes = {\n\tgetEvents: PropTypes.func.isRequired,\n\tevent: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tevent: state.event\n});\n\nexport default connect(mapStateToProps, { getEvents })(Events);\n"]},"metadata":{},"sourceType":"module"}