{"ast":null,"code":"import axios from \"axios\";\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_PROFILES } from \"./types\";\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    console.log(res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createProfile = function (formData, history) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.post(\"/api/profile\", formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      history(\"/dashboard\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      const errors = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errors;\n\n      if (errors) {\n        console.log(\"error\");\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    history(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      console.log(\"error\");\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm(\"You want to delete?\")) {\n    try {\n      await axios.delete(\"api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/rionsawabe/HikingSNS/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_PROFILES","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","console","log","createProfile","formData","history","edit","config","headers","post","errors","addExperience","put","deleteExperience","id","delete","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n\tGET_PROFILE,\n\tPROFILE_ERROR,\n\tUPDATE_PROFILE,\n\tCLEAR_PROFILE,\n\tACCOUNT_DELETED,\n\tGET_PROFILES\n} from \"./types\";\n\nexport const getCurrentProfile = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile/me\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const getProfiles = () => async (dispatch) => {\n\tdispatch({ type: CLEAR_PROFILE });\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILES,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const getProfileById = (userId) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`/api/profile/user/${userId}`);\n\t\tconsole.log(res);\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const createProfile =\n\t(formData, history, edit = false) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst res = await axios.post(\"/api/profile\", formData, config);\n\n\t\t\tdispatch({\n\t\t\t\ttype: GET_PROFILE,\n\t\t\t\tpayload: res.data\n\t\t\t});\n\n\t\t\thistory(\"/dashboard\");\n\t\t} catch (err) {\n\t\t\tconst errors = err.response?.data?.errors;\n\t\t\tif (errors) {\n\t\t\t\tconsole.log(\"error\");\n\t\t\t}\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: err.response.statusText,\n\t\t\t\t\tstatus: err.response.status\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t}\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/experience\", formData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\n\t\thistory(\"/dashboard\");\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\t\tif (errors) {\n\t\t\tconsole.log(\"error\");\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const deleteExperience = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`api/profile/experience/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const deleteAccount = (id) => async (dispatch) => {\n\tif (window.confirm(\"You want to delete?\")) {\n\t\ttry {\n\t\t\tawait axios.delete(\"api/profile\");\n\n\t\t\tdispatch({ type: CLEAR_PROFILE });\n\t\t\tdispatch({ type: ACCOUNT_DELETED });\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: err.response.statusText,\n\t\t\t\t\tstatus: err.response.status\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}