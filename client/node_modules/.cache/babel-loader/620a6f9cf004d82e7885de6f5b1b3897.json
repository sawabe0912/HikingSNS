{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; //get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/rionsawabe/HikingSNS/client/src/actions/post.js"],"names":["axios","ADD_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","likes","addPost","formData","config","headers","post","getPost","id","addComment","deleteComment","commentId","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n\tADD_POST,\n\tGET_POSTS,\n\tPOST_ERROR,\n\tUPDATE_LIKES,\n\tGET_POST,\n\tADD_COMMENT,\n\tREMOVE_COMMENT\n} from \"./types\";\n\n//get posts\nexport const getPosts = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/posts\");\n\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\n//Add like\nexport const addLike = (postId) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/like/${postId}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { postId, likes: res.data }\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\n//Add post\nexport const addPost = (formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t};\n\n\ttry {\n\t\tconst res = await axios.post(`/api/posts`, formData, config);\n\n\t\tdispatch({\n\t\t\ttype: ADD_POST,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\n//get post\nexport const getPost = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`/api/posts/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: GET_POST,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\n//Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t};\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`/api/posts/comment/${postId}`,\n\t\t\tformData,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n\n//Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n\t\tdispatch({\n\t\t\ttype: REMOVE_COMMENT,\n\t\t\tpayload: commentId\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status\n\t\t\t}\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}