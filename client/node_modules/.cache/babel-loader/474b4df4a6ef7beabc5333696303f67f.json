{"ast":null,"code":"var _jsxFileName = \"/Users/rionsawabe/HikingSNS/client/src/components/post/CommentItem.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = _ref => {\n  let {\n    postId,\n    comment: {\n      _id,\n      text,\n      user\n    },\n    auth,\n    deleteComment\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentItem mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-3\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteComment(postId, _id),\n        type: \"button\",\n        className: \"btn btn-danger mb-3 ml-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 2\n  }, this);\n};\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/Users/rionsawabe/HikingSNS/client/src/components/post/CommentItem.js"],"names":["React","PropTypes","connect","deleteComment","CommentItem","postId","comment","_id","text","user","auth","loading","propTypes","string","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,MAAMC,WAAW,GAAG;AAAA,MAAC;AACpBC,IAAAA,MADoB;AAEpBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA;AAAb,KAFW;AAGpBC,IAAAA,IAHoB;AAIpBP,IAAAA;AAJoB,GAAD;AAAA,sBAMnB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA,kBAAoBK;AAApB;AAAA;AAAA;AAAA;AAAA,cADD,EAGE,CAACE,IAAI,CAACC,OAAN,IAAiBF,IAAI,KAAKC,IAAI,CAACD,IAAL,CAAUF,GAApC,iBACA;AACC,QAAA,OAAO,EAAE,MAAMJ,aAAa,CAACE,MAAD,EAASE,GAAT,CAD7B;AAEC,QAAA,IAAI,EAAC,QAFN;AAGC,QAAA,SAAS,EAAC,0BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UANmB;AAAA,CAApB;;KAAMH,W;AAsBNA,WAAW,CAACQ,SAAZ,GAAwB;AACvBP,EAAAA,MAAM,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADF;AAEvBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,MAAV,CAAiBD,UAFH;AAGvBJ,EAAAA,IAAI,EAAET,SAAS,CAACc,MAAV,CAAiBD,UAHA;AAIvBX,EAAAA,aAAa,EAAEF,SAAS,CAACe,IAAV,CAAeF;AAJP,CAAxB;;AAOA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADuB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,WAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n\tpostId,\n\tcomment: { _id, text, user },\n\tauth,\n\tdeleteComment\n}) => (\n\t<div className=\"bg-white\">\n\t\t<div className=\"commentItem mb-3\">\n\t\t\t<p className=\"p-3\">{text}</p>\n\n\t\t\t{!auth.loading && user === auth.user._id && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => deleteComment(postId, _id)}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-danger mb-3 ml-2\">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t</div>\n);\n\nCommentItem.propTypes = {\n\tpostId: PropTypes.string.isRequired,\n\tcomment: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n\tdeleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"]},"metadata":{},"sourceType":"module"}