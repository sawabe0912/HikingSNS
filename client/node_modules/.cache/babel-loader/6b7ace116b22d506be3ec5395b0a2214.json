{"ast":null,"code":"import { GET_EVENTS, EVENT_ERROR, ADD_EVENT, GET_EVENT, UPDATE_JOINS, UPDATE_INTERESTS } from \"../actions/types\";\nconst initialState = {\n  events: [],\n  event: null,\n  loading: true,\n  error: {}\n};\n\nfunction eventReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_EVENTS:\n      return { ...state,\n        events: payload,\n        loading: false\n      };\n\n    case GET_EVENT:\n      return { ...state,\n        event: payload,\n        loading: false\n      };\n\n    case ADD_EVENT:\n      return { ...state,\n        events: [payload, ...state.events],\n        loading: false\n      };\n\n    case UPDATE_JOINS:\n      return { ...state,\n        events: state.events.map(event => event._id === payload.eventId ? { ...event,\n          joins: payload.joins\n        } : event),\n        loading: false\n      };\n\n    case UPDATE_INTERESTS:\n      return { ...state,\n        events: state.events.map(event => event._id === payload.eventId ? { ...event,\n          interests: payload.interests\n        } : event),\n        loading: false\n      };\n\n    case EVENT_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default eventReducer;","map":{"version":3,"sources":["/Users/rionsawabe/HikingSNS/client/src/reducers/event.js"],"names":["GET_EVENTS","EVENT_ERROR","ADD_EVENT","GET_EVENT","UPDATE_JOINS","UPDATE_INTERESTS","initialState","events","event","loading","error","eventReducer","state","action","type","payload","map","_id","eventId","joins","interests"],"mappings":"AAAA,SACCA,UADD,EAECC,WAFD,EAGCC,SAHD,EAICC,SAJD,EAKCC,YALD,EAMCC,gBAND,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE,EADY;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,OAAO,EAAE,IAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;;AAOA,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACC,SAAKd,UAAL;AACC,aAAO,EACN,GAAGY,KADG;AAENL,QAAAA,MAAM,EAAEQ,OAFF;AAGNN,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKN,SAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENJ,QAAAA,KAAK,EAAEO,OAFD;AAGNN,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKP,SAAL;AACC,aAAO,EACN,GAAGU,KADG;AAENL,QAAAA,MAAM,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,MAAnB,CAFF;AAGNE,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAKD,SAAKL,YAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaS,GAAb,CAAkBR,KAAD,IACxBA,KAAK,CAACS,GAAN,KAAcF,OAAO,CAACG,OAAtB,GACG,EAAE,GAAGV,KAAL;AAAYW,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAA3B,SADH,GAEGX,KAHI,CAFF;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAP;;AASD,SAAKJ,gBAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaS,GAAb,CAAkBR,KAAD,IACxBA,KAAK,CAACS,GAAN,KAAcF,OAAO,CAACG,OAAtB,GACG,EAAE,GAAGV,KAAL;AAAYY,UAAAA,SAAS,EAAEL,OAAO,CAACK;AAA/B,SADH,GAEGZ,KAHI,CAFF;AAONC,QAAAA,OAAO,EAAE;AAPH,OAAP;;AASD,SAAKR,WAAL;AACC,aAAO,EACN,GAAGW,KADG;AAENF,QAAAA,KAAK,EAAEK,OAFD;AAGNN,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAMD;AACC,aAAOG,KAAP;AA/CF;AAiDA;;AAED,eAAeD,YAAf","sourcesContent":["import {\n\tGET_EVENTS,\n\tEVENT_ERROR,\n\tADD_EVENT,\n\tGET_EVENT,\n\tUPDATE_JOINS,\n\tUPDATE_INTERESTS\n} from \"../actions/types\";\n\nconst initialState = {\n\tevents: [],\n\tevent: null,\n\tloading: true,\n\terror: {}\n};\n\nfunction eventReducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase GET_EVENTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevents: payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase GET_EVENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevent: payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase ADD_EVENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevents: [payload, ...state.events],\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase UPDATE_JOINS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevents: state.events.map((event) =>\n\t\t\t\t\tevent._id === payload.eventId\n\t\t\t\t\t\t? { ...event, joins: payload.joins }\n\t\t\t\t\t\t: event\n\t\t\t\t),\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase UPDATE_INTERESTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tevents: state.events.map((event) =>\n\t\t\t\t\tevent._id === payload.eventId\n\t\t\t\t\t\t? { ...event, interests: payload.interests }\n\t\t\t\t\t\t: event\n\t\t\t\t),\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase EVENT_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: payload,\n\t\t\t\tloading: false\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default eventReducer;\n"]},"metadata":{},"sourceType":"module"}